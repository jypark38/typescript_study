// 인덱스 타입
// 객체가 지닐 수 있는 속성에 대해 보다 유연한 객체를 만들 수 있게 해주는 기능

// 사용자 입력의 유효성검사를 하는 애플리케이션

// 지금 하고싶은것 : 객체를 유연하게 만들어서, 어떤 양식에서든 사용할 수 있도록 하려함
// 웹페이지에는 여러 값과 식별자를 입력해야하는 다양한 양식이 있을 수 있기 때문에
// 제한적으로 두긴 좀 그렇다

// 몇개의 속성을 가질지, 어떤 속성이 어떤 이름을 가질지 미리 알 수 없다.
// 이럴때 인덱스타입을 쓰자.
interface ErrorContainer { // {email : 'Not a valid email, username: 'Must start with a character'}
    [prop: string]: string;
}
// 몇개가 들어올지, 어떤 이름을 가질지는 모르겠는데,
// 위 인터페이스 기반의 객체에 추가되는 모든 속성은 문자열로 해석할 수 있는 프로퍼티 이름을 가져야하고
// 문자열로 해석할 수 있는 프로퍼티 값을 가져야 한다고 알려주었다.

// 인덱스 타입을 지정했으니, 그에 맞는 속성들을 추가해줄 수 있다.

const errorBag: ErrorContainer = {
    email: 'Not a valid email',
    username : 'Must start with a capital character'
};
// 키에는 숫자를 입력해도 된다. 숫자는 문자열로 해석될 수 있기 때문이다.
// 인덱스 타입의 키 타입ㅇ르 number로 바꾸면
// 숫자 키만 써야된다.

// 인덱스 타입을 써서, 사용하고자 하는 속성의 이름과 필요한 속성의 개수를 미리 알 필요가 없어졌다.