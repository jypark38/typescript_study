OOP랑 무엇인가.
객체지향 프로그래밍
코드에서 실제 개체로 작업한다
코드를 작성하면서 객체를 실제 개채랑 최대한 비슷하게 만들었을거다.
ex)
- ProductList : 서버(DB) 에서 가져온 제품 목록을 렌더링하고 관리하는 역할을 하는 객체
- 렌더링, 가져오기, 관리 로직이 포함된다.

- Product : 단일 제품을 관리하는 각 제품에 대해 단일 객체나 여러 객체가 필요할 수 있음.
- 해당 제품에 대한 세부 정보를 포함하고 렌더링해서 제품을 장바구니 에 추가하는 등의 작업을 가능하게 해준다.
- 화면에 UI 구현은 자스나 타스로 구현

- 그래서 기본 데이터를 관리하는 로직이 포함된 제품 목록이랑 제품 객체를 사용해서 구현가능

- 위 두 객체는 연결이 돼있고 상품은 또 장바구니 객체랑 연결됨

애플리케이션을 어떻게 구축할지 논리구조 어떻게 나눌지의 방법론이라 볼 수 있따.


객체 : 코드로 작업을 수행하면서 사용할 수 있는 구체적인 요소들
데이터를 저장하고 메서드를 실행하기 위해 메서드를 저장하는데, 사용하는 데이터 구조
클래스 : 객체의 템플릿
클래스를 사용해서 객체의 형태, 포함해야하는 데이터, 어떤 메서드가 필요한지 정의할 수 있다.

객체는 클래스의 인스턴스


